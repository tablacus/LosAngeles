;
;	X1-IOCS CALL
;

EXTSP	EQU	0FFC0H
STACK	EQU	00000H
LINE	EQU	25

	ORG	$0000
	JP	IOCS_BOOT
AT_GETL:
	JP	IOCS_GETL

	ORG	$0007
AT_WIDTH:
	DB	80

	ORG	$000E
AT_XYADR:
	DW	0
_TXADR:	DW	0

	ORG	$0013
AT_PRINT:
	JP	IOCS_PRINT

	ORG	$0018
	JP	BIOS

AT_CONYS:
	DB	0
AT_CONYE:
	DB	MAXLN

	ORG	$001E
AT_CONXS:
	DB	0
AT_CONXE:
	DB	WIDTH

	ORG	$0026
AT_COLORF:
	DB	7

	ORG	$002E
AT_KEY:	
_KEYD:
	DW	0FF00H

	ORG	$0038
	JP	_COLD

	ORG	$004D
AT_WIDCH:
	JP	IOCS_WIDCH

	ORG	$0052
INTVEC:	DW	INT

	ORG	$0066
NMI:
	JP	_COLD

	ORG	$0080
CTC0:	DW	INTCTCE
CTC1:	DW	INTCTCE
CTC2:	DW	INTCTC2
CTC3:	DW	INTCTCE
_CTC:	DW	0

	ORG	$00FA
IOCS_BOOT:
	DI
	IM	2
	LD	SP,STACK
	LD	HL,_COLD
	LD	($0001),HL
	LD	HL,BIOS_SRC
	LD	DE,BIOS_DEST
	LD	BC,BIOS_END-BIOS_DEST
	LDIR

	LD	BC,0
	LD	(_CTC),BC
	LD	BC,00A04H
	CALL	CHKCTC
	LD	BC,00704H
	CALL	CHKCTC
	LD	BC,01FA8H
	CALL	CHKCTC
	LD	BC,01FA0H
	CALL	CHKCTC

	LD	C,080H		;INIT DMA
	LD	HL,0C306H
INIDMA:
	OUT	(C),H
	DEC	L
	JR	NZ,INIDMA

	LD	A,80
	CALL	AT_WIDCH

	LD	BC,010AAH	;PALET
	OUT	(C),C
	LD	BC,011CCH
	OUT	(C),C
	LD	BC,012F0H
	OUT	(C),C
	INC	B
	DB	0EDH,071H

	LD	A,0E4H
	CALL	COMOUT
	XOR	A
	CALL	OT49SB

	LD	A,INTVEC/256
	LD	I,A

	LD	BC,(_CTC)
	DEC	BC
	DEC	BC

	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	LD	A,CTC0
	OUT	(C),A

	INC	C
	LD	A,047H
	OUT	(C),A
	LD	A,13		;Baudrate 9600-13
	OUT	(C),A

	LD	A,0E4H
	CALL	COMOUT
	LD	A,INTVEC
	CALL	OT49SB
;
	LD	BC,01FC4H
	LD	A,00CH
	OUT	(C),A

	LD	C,0C0H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	INC	C
	LD	A,40
	OUT	(C),A

	INC	C
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	INC	C
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	LD	C,0C5H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	CALL	CHECK_BIOS
	CP	0C9H
	JR	Z,BIOSOK
	LD	A,0AFH		;XOR	A
	LD	(X1KPAT),A
	LD	HL,SCRNX
	LD	(_SCRN+1),HL
BIOSOK:
	JP	INIT

CHKCTC:
	PUSH	BC
	LD	DE,04703H
INICTC1:
	INC	C
	OUT	(C),D
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	DEC	E
	JR	NZ,INICTC1
	POP	BC

	LD	DE,007FAH
	OUT	(C),D
	OUT	(C),E
	IN	A,(C)
	CP	E
	RET	NZ
	OUT	(C),D
	OUT	(C),D
	IN	A,(C)
	CP	D
	RET	NZ
	INC	BC
	INC	BC
	LD	(_CTC),BC
	RET

GETL:
	CALL	AT_GETL
	RET	NC
	LD	A,$1B
	LD	(DE),A
	INC	DE
	XOR	A
	LD	(DE),A
	DEC	DE
	RET
;
GETKY:
	LD	A,(AT_KEY)
	OR	A
	JP	NZ,_KYBFC
	RET
;
XSCRN:
	PUSH	HL
	PUSH	BC
	CALL	AT_VRCALC
	LD	C,L
	LD	B,H
	IN	A,(C)
	POP	BC
	POP	HL
	RET

	ORG	$02AA
AT_FLGET:
	PUSH	BC
	PUSH	HL
	LD	BC,(_TXADR)
	SET	5,B
	IN	H,(C)
FLGET1:
	LD	A,(_KEYD+1)
	RRCA
	RRCA
	AND	010H
	OR	8
	IN	L,(C)
	OR	L
	OUT	(C),A
	CALL	IOCS_INKEY
	JR	Z,FLGET1
	OUT	(C),H
	POP	HL
	POP	BC
	RET

IOCS_INKEY:
	EI
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	JR	Z,INKEY1
	LD	A,H
	INC	A
	LD	(_KEYPS+1),A
	LD	L,A
	LD	H,KEYBF/256
	LD	A,(HL)
INKEY1:
	POP	HL
	OR	A
	RET

	ORG	$03E3
AT_KYBFS:
	JP	KEYBS
	RET

	ORG	$04A3
AT_NL:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	CTRL04
	POP	HL
	POP	DE
	POP	BC
	RET

	ORG	$04C8
AT_PRNT0:
	PUSH	AF
	CP	$20
	JR	NC,PRNT01
	LD	A,$20
PRNT01:
	CALL	IOCS_PRINT
	POP	AF
	RET

BIOS:
	PUSH	HL
	LD	HL,08010H
	ADD	HL,SP
	POP	HL
	JP	C,BIOS1
	LD	(SPPAT+1),SP	;スタックがBIOS-ROMと被っている場合
	LD	SP,EXTSP
	CALL	BIOS1
SPPAT:	LD	SP,0
	RET

IOCS_WIDCH:
	PUSH	BC
	PUSH	DE
	PUSH	HL

	LD	BC,$01FF0
	CP	41
	JR	C,WIDTH40
	IN	A,(C)
	RRCA
	LD	HL,_C8025L
	JR	C,SETCRTC
	LD	HL,_C8025H
	JR	SETCRTC
WIDTH40:
	IN	A,(C)
	RRCA
	LD	HL,_C4025L
	JR	C,SETCRTC
	LD	HL,_C4025H
SETCRTC:
	LD	DE,_CRTCD
	LD	BC,16
	LDIR

	LD	HL,_CRTCD
	XOR	A
SETCRT1:
	LD	BC,01800H
	OUT	(C),A
	INC	C
	INC	B
	OUTI
	INC	A
	CP	12
	JR	NZ,SETCRT1
	INC	HL
	INC	HL
	LD	BC,01A03H+00100H	;OUTIは先にBを減らすので足している
	OUTI
	LD	BC,01FD0H+00100H
	OUTI

	CALL	CTRL0C
	POP	HL
	POP	DE
	POP	BC
	LD	A,(WK1FD0)
	LD	(_WK1FD0),A
	LD	A,(_CRTCD+1)
	LD	(AT_WIDTH),A
	AND	A
	RET

	ORG	$054D
AT_VRCALC:
LOC1:
	PUSH	DE
	LD	C,L
	LD	B,8
	LD	E,H
	LD	D,0
	LD	HL,(_CRTCD)
	LD	L,D
LOC2:
	ADD	HL,HL
	JR	NC,LOC3
	ADD	HL,DE
LOC3:
	DJNZ	LOC2
	ADD	HL,BC
	POP	DE
	RET

ZERO_MEMORY_DE:
	XOR	A
FILL_MEMORY_DE:
	LD	(DE),A
	INC	DE
	DJNZ	FILL_MEMORY_DE
	RET

	ORG	$0600
KEYBF:	DS	256

INT:
	PUSH	AF
	PUSH	HL
	LD	HL,$FF00
	ADD	HL,SP
	JR	C,INTP1X
	LD	(INTSP+1),SP
	LD	SP,EXTSP
	CALL	INTP1
INTSP:	LD	SP,0
	JR	INTPE
INTP1X:
	CALL	INTP1
INTPE:
	POP	HL
INTPE2:
	POP	AF
INTCTCE:
	EI
	RETI
INTP1:
	PUSH	BC

	CALL	IN49SB
	LD	H,A
	CALL	IN49SB
	LD	L,A

	CP	8		;DELキー
	JR	NZ,SCEXE
	LD	A,H
	AND	011H		;CTRLキー + GRAPHキー
	JR	Z,RESET
SCEXE:
	LD	(_KEYD),HL
	CALL	KEYSET1

	POP	BC
	RET

RESET:
	LD	A,01DH
	OUT	(0),A
	RST	0

INTCTC2:
	PUSH	AF
INTCPAT:LD	A,000H
	DEC	A
	LD	(INTCPAT+1),A
	JR	NZ,INTPE2

	LD	A,(_KEYD)
	OR	A
	JR	Z,INTPE2
KEYSET0:
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	JR	NZ,INTC2A

	LD	HL,(_KEYD)
	CALL	KEYSET
INTC2A:
	LD	A,(_KEYSP)
	AND	00FH
	LD	(INTCPAT+1),A

	JR	INTPE

KEYSET1:
	BIT	5,H
	PUSH	AF
	LD	BC,(_CTC)
	LD	A,B
	OR	C
	JR	NZ,KEYS10E

	POP	AF
	JR	NZ,KEYSET
	PUSH	AF
	JR	KEYSET0
KEYS10E:
	POP	AF
	RET	Z
	PUSH	AF
	LD	A,3		;CTC STOP
	OUT	(C),A
	POP	AF

	OR	A
	RET	Z

	PUSH	HL
	LD	HL,(_KEYSP)
	LD	A,0A7H
	OUT	(C),A
	OUT	(C),L
	LD	A,H
	LD	(INTCPAT+1),A
	POP	HL

KEYSET:
	LD	A,L
	BIT	7,H
	CALL	Z,FKEY
	BIT	6,H
	RET	NZ
KEYBS:
	OR	A
	RET	Z
KEYBS1:
	CP	3
	CALL	Z,_KYBFC
	PUSH	HL
	PUSH	AF
	LD	HL,(_KEYPS)
	INC	L
	LD	A,L
	CP	H
	JR	Z,POP_AF_HL_SCF_RET
	LD	(_KEYPS),A
	LD	H,KEYBF/256
	POP	AF
	LD	(HL),A
	POP	HL
	RET

POP_AF_HL_SCF_RET:
	POP	AF
	POP	HL
	SCF
	RET

FKEY:
	BIT	6,L
	RET	Z
	LD	A,01BH
	CALL	KEYBS1
	LD	A,L
	ADD	A,020H-'q'
	BIT	7,L
	RET	Z
	LD	L,'P'
	SUB	0E1H+020H-'q'
	JR	Z,KEYBSL
	INC	L
	DEC	A
	JR	Z,KEYBSL
	INC	L
	SUB	0EBH-0E2H
	JR	Z,KEYBSL
	LD	L,'C'
	DEC	A
	JR	Z,KEYBSL
	LD	L,'X'
KEYBSL:
	LD	A,L
	JR	KEYBS1

	ORG	$07F7
AT_BELL:
CTRL07:
	LD	HL,BEEPD
BEEP1:
	LD	A,(HL)
	INC	HL
	CP	0FFH
	RET	Z
	DI
	LD	B,01CH
	OUT	(C),A
	OUTI
	EI
	JR	BEEP1

C12S:
	SET	4,B
	SET	3,B
	IN	H,(C)
X1PAT:	OUT	(C),E
	LD	E,H
	RES	3,B
	IN	H,(C)
	OUT	(C),D
	LD	D,H
	RES	4,B
	IN	H,(C)
	OUT	(C),L
	LD	L,H
	DEC	A
	RET

CTRL0C:
	CALL	CTRL0B
CTRL06:
	LD	BC,(_TXADR)
C1AX1:
	LD	A,B
	OR	038H
	LD	B,A
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	LD	A,020H
	OUT	(C),A		;Text
	RES	4,B
	LD	A,(AT_COLORF)
	OUT	(C),A		;Color
	INC	BC
	RES	5,B
	LD	HL,(_CRTCD+10)
	ADD	HL,BC
	JR	NC,C1AX1
	RET

CTRL04:
	CALL	_POS
	LD	A,L
	OR	A
	RET	Z
CTRL03:
	CALL	CTRL0D
CTRL0A:
CTRL1F:
	LD	BC,(_TXADR)
	LD	HL,(_CRTCD+1)
	LD	H,0
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	HL,(_CRTCD+10)
	ADD	HL,BC
	CCF
	SBC	A,A
	JP	PRINTE8

CTRL0E:
	CALL	_POS
	LD	A,H
	JR	SCR1
SCR:
	LD	A,(AT_CONYE)
	DEC	A
SCR1:
	PUSH	BC
	PUSH	DE
	PUSH	AF
	LD	A,7
	LD	HL,SCRDMAD
	CALL	SETDMA
	POP	AF
	LD	HL,03800H

SCRUP1:
	OR	A
	JR	Z,SCRCL
	PUSH	AF
	CALL	UPSUB		;kanji
	LD	A,(_CRTCD+12)
	LD	E,A
	LD	D,0F7H
	ADD	HL,DE
	PUSH	DE
	CALL	UPSUB		;Text
	POP	DE
	ADD	HL,DE
	CALL	UPSUB		;Color
	SET	4,H
	POP	AF
	DEC	A
	JR	SCRUP1

AT_SCRCL:
	LD	HL,02000H+80
	LD	A,(_COLORF)
AT_SCRCL1:
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	DEC	L
	JR	NZ,AT_SCRCL1
	POP	BC
	EXX
	POP	BC
	EXX
	RET

AT_UPSUB:
	LD	L,40
AT_UPSUB1:
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	DEC	L
	JR	NZ,AT_UPSUB1
	RET

SETDMA:
	LD	BC,01F87H
SDMAI:
	INC	B
	OUTI
	DEC	A
	JR	NZ,SDMAI
	RET

SCRDMAD:
	DB	0C3H		;WR6 リセット
	DB	09AH		;WR5 ストップ WAIT READY:HIGH
	DB	065H		;WR0 ブロック長(LH)
	DW	79
	DB	01CH		;WR1 ポートAインクリメント I/O
	DB	018H		;WR0 ポートAアドレス(LH)

UPSUB:
	LD	A,(_CRTCD+1)
	LD	E,A
	LD	D,0
	LD	A,0CDH		;WR4 バースト ポートB開始アドレス(LH)
	OUT	(C),A
	OUT	(C),L		;SOURCE
	OUT	(C),H
	ADD	HL,DE
	LD	A,01DH		;WR0 ポートA開始アドレス(LH) ポートA→ポートB 転送
	OUT	(C),A
	OUT	(C),L		;DEST
	OUT	(C),H
GO_DMA:
	LD	A,0CFH
	OUT	(C),A		;WR6 ロード
	LD	A,0B3H
	OUT	(C),A		;WR6 強制RDY
	OUT	(C),C		;WR6 イネーブル
	RET

SCRCL:
	LD	B,H
	LD	C,L
	LD	HL,02000H+80
	LD	A,(AT_COLORF)
SCRCL1:
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	RES	3,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	SET	3,B
	SET	4,B
	INC	BC
	DEC	L
	JR	NZ,SCRCL1
	POP	DE
	POP	BC
	RET

SCRN:
	PUSH	DE
	IN	E,(C)		;Text
	SET	3,B
	IN	D,(C)		;Kanji
	JR	Z,SCRNE
	XOR	A
	PUSH	BC
	LD	BC,03037H	;VRMJIS
	RST	018H
	LD	BC,02F52H	;JISSFT
	RST	018H
	POP	BC
	IN	A,(C)
	RES	3,B
	AND	040H
	JR	NZ,SCRN1
	LD	A,D
	POP	DE
	RET
SCRN1:
	LD	A,E
	POP	DE
	RET

SCRNE:
	POP	DE
	RES	3,B
SCRNX:
	IN	A,(C)
	RET

CSR:
_POS:
	LD	HL,(_TXADR)
	PUSH	BC
	LD	BC,(_CRTCD+12)
	XOR	A
POS1:
	ADD	HL,BC
	INC	A
	JR	C,POS1
	SBC	HL,BC
	DEC	A
	LD	H,A
	POP	BC
	AND	A
	RET

	ORG	$09A1
	RET

CTRL12:
	PUSH	DE
	CALL	_POS
	LD	A,(_CRTCD+1)
	SUB	L
	LD	BC,(_TXADR)
	LD	DE,02000H	;D:Text E:Kanji
	LD	HL,(AT_COLORF)	;L:Color
	SET	5,B
C12X1:
	CALL	C12S
	INC	BC
	JR	NZ,C12X1
	POP	DE
	RET

	ORG	$0A8F
	XOR	A
	LD	C,A
	LD	HL,$4003
CLS1:
	LD	B,H
CLS2:
	DB	$ED,$71
	INC	B
	JR	NZ,CLS2
;
	ADD	A,L
	LD	C,A
	JR	NZ,CLS1
	RET


	ORG	$0B49
AT_IN49SB:
IN49SB:
	PUSH	BC
	LD	BC,01A01H
CANR:
	IN	A,(C)
	AND	020H
	JR	NZ,CANR
	LD	BC,01900H
	IN	A,(C)
	POP	BC
	RET
CANW:
	LD	BC,01A01H
	IN	C,(C)
	BIT	6,C
	JR	NZ,CANW
	RET

PRINT_E:
	LD	A,E
IOCS_PRINT:
	PUSH	DE
	LD	E,A
	PUSH	BC
	PUSH	HL
	LD	A,01FH
	CP	E
	JR	NC,CTRL
PRINTC:
INSFLG:	AND	A
	CALL	C,CTRL12

KANFLG:	LD	A,000H
	OR	A
	JR	NZ,KANJI2
X1KPAT:	LD	A,E
	CP	080H
	JR	C,ANK
	CP	0A0H
	JR	C,KANJI1
	CP	0E0H
	JR	C,ANK
KANJI1:
	LD	(KANFLG+1),A
	JR	PRINTE5
ANK:
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	OUT	(C),E		;Text
KANJIE:
	CALL	PRINTE7
PRINTE5:
	POP	HL
	POP	BC
	LD	A,E
	POP	DE
	AND	A
	RET

CTRL:
	CALL	KANCLR
	LD	A,0A7H		;AND	A
	LD	(INSFLG),A
	LD	A,E
	ADD	A,A
	LD	L,A
	LD	H,CTRLTB/256
	LD	A,(HL)
	INC	L
	LD	H,(HL)
	LD	L,A
	CALL	JP_HL
	JR	PRINTE5

KANJI2:
	PUSH	DE
	LD	D,A
	LD	BC,02F81H	;SFTJIS
	RST	018H
	LD	BC,02FC3H	;Instead or JISVRM
	RST	018H

	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	OUT	(C),D		;kanji
	RES	3,B
	OUT	(C),E		;Text
	CALL	PRINTE7
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	SET	6,D
	OUT	(C),D		;Kanji
	RES	3,B
	OUT	(C),E		;Text
	POP	DE
	XOR	A
	LD	(KANFLG+1),A
	JR	KANJIE

KANCLR:
	LD	A,(KANFLG+1)
	OR	A
	RET	Z
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	XOR	A
	LD	(KANFLG+1),A
	OUT	(C),A		;Kanji
	RES	3,B
	LD	A,020H
	OUT	(C),A		;Text
PRINTE7:
	RES	4,B
PRINTE6:
	LD	A,(AT_COLORF)
PRINTE4:
	OUT	(C),A		;Color
	LD	A,B
	AND	7
	LD	B,A
PRINTE2:
	INC	BC
PRINTE3:
	LD	HL,(_CRTCD+10)
	AND	A
	ADC	HL,BC
PRINTE8:
	JR	Z,PRINT2
PRINTE1:
	LD	(_TXADR),BC
PRINTE:
	RET

PRINT2:
	CALL	SCR
	LD	HL,(_CRTCD+12)
	ADD	HL,BC
	LD	(_TXADR),HL
	RET

CTRL1D:
	LD	BC,(_TXADR)
	LD	A,B
	OR	C
	RET	Z
	DEC	BC
	JR	PRINTE1

CTRL1E:
	LD	BC,(_TXADR)
	LD	HL,(_CRTCD+12)
	ADD	HL,BC
	RET	NC
	LD	B,H
	LD	C,L
	JR	PRINTE1

CTRL1C:
	LD	BC,(_TXADR)
	JR	PRINTE2

CTRL09:
	LD	BC,(_TXADR)
	LD	A,C
	AND	0F8H
	ADD	A,8
	LD	C,A
	ADC	A,B
	SUB	C
	LD	B,A
	JR	PRINTE3

CTRL02:
CTRL08:
	LD	HL,(_TXADR)
	LD	A,H
	OR	L
	RET	Z
	DEC	HL
	LD	(_TXADR),HL
	PUSH	DE
	CALL	_POS
	LD	A,(_CRTCD+1)
	SUB	L
	LD	L,A
	DEC	L
	LD	H,038H
	LD	BC,(_TXADR)
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	DE,02000H	;D:Text E:kanji
	LD	HL,(AT_COLORF)	;L:Color
C8X1:
	CALL	C12S
	DEC	BC
	JR	NZ,C8X1
	POP	DE
	RET

CTRL05:
	CALL	_POS
	LD	A,(_CRTCD+1)
	SUB	L
	LD	L,A
	LD	H,020H
	LD	BC,(_TXADR)
C05X1:
	LD	A,B
	OR	038H
	LD	B,A
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	OUT	(C),H		;Text
	RES	4,B
	LD	A,(AT_COLORF)
	OUT	(C),A		;Color
	INC	BC
	DEC	L
	JR	NZ,C05X1
	RET

CTRL0D:
	CALL	_POS
	LD	L,0
LOC:
	PUSH	BC
	PUSH	HL
	CALL	KANCLR
	CALL	AT_VRCALC
	LD	(_TXADR),HL
	POP	HL
	POP	BC
	RET

CTRL01:
	LD	A,037H		;SCF
	LD	(INSFLG),A
	RET

CTRL0B:
	LD	HL,0
	LD	(_TXADR),HL
	RET

CTRL1B:
	RET

	ORG	$0DFE
AT_COMOUT:
COMOUT:
	EI
	CALL	OT49SB
	CALL	CANW
	DI
	RET
OT49SB:
	PUSH	BC
	CALL	CANW
	LD	BC,01900H
	OUT	(C),A
	POP	BC
	RET

IOCS_GETL:
	LD	(KBPAT+1),DE
	PUSH	BC
	PUSH	HL

	CALL	_POS
	PUSH	HL
GETL1:
	CALL	AT_FLGET
	CP	00DH
	JR	Z,GETL1OK
	CP	9
	JR	NZ,GETL1V
	LD	HL,(KBPAT+1)
	CALL	MSX
	JR	GETL1
GETL1V:
	CP	3
	JR	Z,GETL_CANCEL
	CP	01BH
	JR	Z,GETL_CANCEL
	PUSH	AF
	CALL	CTRL01
	POP	AF
	CALL	_PRINT
	JR	GETL1
GETL1OK:
	LD	DE,(KBPAT+1)
	LD	A,(_CRTCD+1)
	LD	B,A
	CALL	ZERO_MEMORY_DE

	POP	DE
	CALL	_POS
	LD	L,0
	LD	A,(_CRTCD+1)
	SUB	L
	LD	D,A
	CALL	LOC1
	LD	C,L
	LD	A,H
	OR	030H
	LD	B,A
	LD	E,D
	LD	HL,(KBPAT+1)
GETL2:
	CALL	_SCRN
	INC	BC
	LD	(HL),A
	INC	HL
	DEC	E
	JR	NZ,GETL2

	LD	A,$0D
	CALL	PRINT
GETL3:
	DEC	HL
	LD	A,(HL)
	CP	021H
	JR	NC,GETL_END
	XOR	A
	LD	(HL),A
	DEC	D
	JR	NZ,GETL3
GETL_END:
	POP	HL
	POP	BC
KBPAT:	LD	DE,0
	RET
GETL_CANCEL:
	SCF
	POP	HL
	JR	GETL_END

	ORG	$0EA5
	DB	0
_KEYPS:	DW	0
_KEYSP:	DW	010C2H

	ORG	$1000
AT_MON:
	LD	A,"*"
MONMX:
	CALL	_PRINT
	LD	DE,(_KBFAD)
	CALL	_GETL
	CALL	MONANL
	JR	MONS
MONMZ2:
	INC	HL
	LD	(MONDADD+1),HL
	JR	MONS
;
MONMZ:
	LD	A,"."
	CALL	_PRINT
	LD	HL,(MONDADD+1)
	CALL	_PRTHL
	CALL	_PRNTS
	LD	A,(HL)
	CALL	_PRTHX
	LD	A,"-"
	JR	MONMX
MONS:
MONMF:	LD	A,$00
	OR	A
	JR	NZ,MONMZ
	JR	AT_MON
MONANL:
	LD	A,(DE)
	INC	DE
	CP	"*"
	JR	NZ,MONA2
	LD	A,(DE)
	CALL	CAP
	INC	DE
	CP	"T"
	JP	Z,MONT
	CP	"G"
	JP	Z,MONG
	CP	"M"
	JR	Z,MONM
	CP	"D"
	JR	Z,MOND
	CP	"F"
	JP	Z,MONF
	CP	"R"
	JR	Z,MONR
	CP	"!"
	RET	NZ
MONR:
	POP	AF
	XOR	A
	RET
;
MONM:
	LD	A,1
	LD	(MONMF+1),A
	CALL	_HLHEX
	RET	C
	JR	MONA6
;
MONA2:
	CP	":"
	JR	NZ,MONA2X
	CALL	_HLHEX
	RET	C
MONA3:
	LD	B,0
MONA4:
	CALL	_2HEX
	JR	C,MONA5
	LD	(HL),A
	INC	HL
	INC	B
	JR	MONA4
;
MONA5:
	LD	A,B
	OR	A
	JR	NZ,MONA6
	CALL	MONA6
MONME:
	XOR	A
	LD	(MONMF+1),A
	RET
;
MONA2X:
	CP	"."
	JR	NZ,MONME
	CALL	_HLHEX
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	CALL	_SPSK
	LD	A,(DE)
	OR	A
	JR	NZ,MONA3
	INC	HL
	JR	MONA6
;
MOND:
	CALL	_HLHEX
	JR	NC,MOND1
MONDADD:LD	HL,0
MOND1:
	PUSH	HL
	CALL	_HLHEX
	POP	DE
	JR	C,MOND1X
	SBC	HL,DE
	LD	A,H
	OR	A
	EX	DE,HL
	JR	NZ,MOND1X
	LD	A,E
	RRCA
	RRCA
	RRCA
	RRCA
	AND	$0F
	INC	A
	LD	C,A
	JR	MOND2
MOND1X:
	LD	C,16
MOND2:
	LD	A,(_WIDTH)
	ADD	A,-80
	SBC	A,A
	AND	8
	ADD	A,8
	LD	B,A
	CALL	MONDX
	DEC	C
	JR	NZ,MOND2
MONA6:
	LD	(MONDADD+1),HL
	XOR	A
	RET
;
MONF:
	CALL	_HLHEX
	RET	C
	LD	(MFST+1),HL
	CALL	_HLHEX
	RET	C
	LD	(MFSE+1),HL
	LD	HL,(_KBFAD)
	LD	B,-1
MONF1:
	INC	B
	CALL	_2HEX
	LD	(HL),A
	INC	HL
	JR	NC,MONF1
	LD	A,B
	OR	A
	RET	Z
	LD	(MFSL+1),A
;
MFSE:	LD	HL,0
MFST:	LD	DE,0
	SBC	HL,DE
	LD	B,H
	LD	C,L
	INC	BC
	LD	HL,(_KBFAD)
	EX	DE,HL
	LD	A,(DE)
MONF2:
	CPIR
	CALL	Z,MONFS
	RET	PO
	JR	MONF2
;

	ORG	$111F
AT_HLHEX:
	PUSH	HL
	PUSH	DE
	CALL	HLHEX5
	JR	C,HLHEX3
	LD	L,A
	LD	H,0
HLHEX1:
	CALL	HLHEX6
	JR	C,HLHEX2
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	A,L
	LD	L,A
	LD	A,$00
	ADC	A,H
	LD	H,A
	JR	HLHEX1
HLHEX2:
	POP	AF
	POP	AF
	XOR	A
	RET
HLHEX3:
	POP	DE
	POP	HL
	SCF
	RET
HLHEX4:
	INC	DE
HLHEX5:
	LD	A,(DE)
	CP	$20
	JR	Z,HLHEX4
HLHEX6:
	LD	A,(DE)
	CALL	_HEX
	RET	C
	INC	DE
	RET

	ORG	$115E
AT_2HEX:
	PUSH	BC
	PUSH	DE
	CALL	HLHEX5
	JR	C,AHEX3
	LD	C,A
	CALL	HLHEX6
	JR	C,AHEX1
	LD	B,A
	LD	A,C
	RLCA
	RLCA
	RLCA
	RLCA
	ADD	A,B
	LD	C,A
AHEX1:
	LD	A,C
AHEX2:
	POP	BC
	POP	BC
	OR	A
	RET
AHEX3:
	LD	A,(DE)
	CP	$3B
	JR	Z,AHEX4
	POP	DE
	POP	BC
	SCF
	RET
AHEX4:
	INC	DE
	LD	A,(DE)
	INC	DE
	JR	AHEX2

MONFS:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
MFSL:	LD	B,1
MONFS1:
	DEC	B
	JR	Z,MONFSX
	INC	DE
	LD	A,(DE)
	CP	(HL)
	INC	HL
	JR	Z,MONFS1
MONFSX2:
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET
;
MONFSX:
	POP	HL
	PUSH	HL
	DEC	HL
	LD	A,(MFSL+1)
	LD	B,A
	CALL	MONDX
	JR	MONFSX2
;
MONDX:
	PUSH	BC
	LD	A,":"
	CALL	_PRINT
	CALL	_PRTHL
MOND3:
	CALL	_PRNTS
	LD	A,(HL)
	INC	HL
	CALL	_PRTHX
	DJNZ	MOND3
	CALL	_MPRNT
	DB	" /",0
	POP	BC
	LD	D,0
	LD	E,B
	SBC	HL,DE
MOND4:
	LD	A,(HL)
	INC	HL
	CP	$20
	JR	NC,MOND5
	LD	A,"."
MOND5:
	CALL	_PRINT
	DJNZ	MOND4
	CALL	_PRNTS
	JP	_LTNL
;
MONG:
	CALL	_HLHEX
	RET	C
	JP	(HL)
;
MONT:
	CALL	_HLHEX
	RET	C
	LD	(MTS+1),HL
	CALL	_HLHEX
	RET	C
	LD	(MTE+1),HL
	CALL	_HLHEX
	RET	C
	LD	(MTD+1),HL
;
MTE:	LD	HL,0
MTS:	LD	DE,0
	SBC	HL,DE
	RET	C
	LD	B,H
	LD	C,L
	EX	DE,HL
;
MTD:	LD	DE,0
	PUSH	HL
	SBC	HL,DE
	POP	HL
	JR	C,MONT2
;
	INC	BC
	LDIR
	RET
;
MONT2:
	ADD	HL,BC
	EX	DE,HL
	ADD	HL,BC
	EX	DE,HL
	INC	BC
	LDDR
	RET

	ORG	$12DC
AT_LPRNT:
	PUSH	BC
	LD	BC,01A01H
	PUSH	AF
_S05X1:
	IN	A,(C)
	AND	8
	JR	NZ,_S05X1
	POP	AF
	DI
	DEC	C
	OUT	(C),A
	LD	C,3
	LD	A,00EH
	OUT	(C),A
	INC	A
	INC	BC
	DEC	BC
	OUT	(C),A
	EI
	POP	BC
	XOR	A
	RET

_CRTCD:
	DB	06FH,050H,059H,038H,01FH,002H,019H,01CH
	DB	000H,007H
	DW	0-80*LINE,0-80
	DB	00CH
WK1FD0:	DB	0A0H

_C8025L:
	DB	06FH,050H,059H,038H,01FH,002H,019H,01CH
	DB	000H,007H
	DW	0-80*LINE,0-80
	DB	00CH
	DB	0A0H

_C8025H:
	DB	06BH,050H,059H,088H,01BH,001H,019H,01AH
	DB	000H,00FH
	DW	0-80*LINE,0-80
	DB	00CH
	DB	0A3H

_C4025L:
	DB	037H,028H,02DH,034H,01FH,002H,019H,01CH
	DB	000H,007H
	DW	0-40*LINE,0-40
	DB	00DH
	DB	0A0H

_C4025H:
	DB	035H,028H,02DH,084H,01BH,001H,019H,01AH
	DB	000H,00FH
	DW	0-40*LINE,0-40
	DB	00DH
	DB	0A3H

	ORG	$1400
CTRLTB:
	DW	PRINTE,CTRL01,CTRL02,CTRL03
	DW	CTRL04,CTRL05,CTRL06,CTRL07
	DW	CTRL08,CTRL09,CTRL0A,CTRL0B
	DW	CTRL0C,CTRL03,CTRL0E,PRINTE
	DW	PRINTE,PRINTE,CTRL01,PRINTE
	DW	PRINTE,PRINTE,PRINTE,PRINTE
	DW	PRINTE,PRINTE,CTRL06,CTRL1B
	DW	CTRL1C,CTRL1D,CTRL1E,CTRL1F

BEEPD:	DB	0,08EH,1,0,00BH,0,00CH,010H
	DB	007H,03EH,008H,010H,00DH,0,0FFH

	ORG	$1451
AT_CAP:
	CP	"a"
	RET	C
	CP	"z"+1
	RET	NC
	SUB	$20
	RET

;
;	LA JUMP
;
AHEX	EQU	AT_2HEX
BELL	EQU	AT_BELL
CAP	EQU	AT_CAP
FLGET	EQU	AT_FLGET
HLHEX	EQU	AT_HLHEX
LPRNT	EQU	AT_LPRNT
MON	EQU	AT_MON
PRNT0	EQU	AT_PRNT0
PRINT	EQU	IOCS_PRINT
;
AT_ERR	EQU	$1F82
AT_RET	EQU	$1F83
;
BOOT	EQU	AT_RET
MOTOFF	EQU	AT_RET
PRTTMS	EQU	AT_RET
SETTMS	EQU	AT_RET
;
;	LA WORK
;
CONYS	EQU	AT_CONYS
CONYE	EQU	AT_CONYE
CONXS	EQU	AT_CONXS
CONXE	EQU	AT_CONXE
COLORF	EQU	AT_COLORF
DTBUF	EQU	$2C00
FATBF	EQU	$2400
FNAME	EQU	$1481
FTYPE	EQU	$1480
GCEH	EQU	$2F
KBFAD	EQU	$FF00
KYBFX	EQU	63
MAXDRV	EQU	8
MAXLN	EQU	25
MEMAX	EQU	$FF00
STKAD	EQU	$0000
WIDTH	EQU	80
WKSIZ	EQU	$C000
XYADR	EQU	AT_XYADR
;
;	FOR PATCH PROGRAM
;
	ORG	$14A0
;
	NOP
	LD	E,A
	CP	$7F
	RET
