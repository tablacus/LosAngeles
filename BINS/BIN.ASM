;
;	BIN	Binary Converter
;
;
	INCLUDE	"LA_AILS80ASM.DEF"
;

RUN	EQU	$3000

	ORG	RUN-7

;	MSX BINARY HEADER
	DB	$FE
;	MSX BINARY START ADDRESS
	DW	RUN
;	MSX BINARY END ADDRESS
	DW	PGMEND-1
;	MSX BINARY EXEC ADDRESS
	DW	RUN
;
	LD	IX,(_IBFAD)
	CALL	_SPSK
	LD	A,(DE)
	CP	"/"
	JR	Z,SW
	CP	"-"
	JR	NZ,MAIN
SW:
	INC	DE
	LD	A,(DE)
	CALL	_CAP
	INC	DE
	CP	"L"
	JP	Z,MSXLA
	CP	"M"
	JP	Z,LAMSX
	CP	"N"
	JP	Z,NORMAL
	CP	"C"
	JP	Z,COM
	JP	USAGE
MAIN:
	CALL	_FILE
	RET	C
	LD	A,(IX+1)
	CP	$20
	JP	Z,USAGE
;
	LD	A,(_WILD)
	OR	A
	LD	A,$1A
	CALL	NZ,_PRINT
;
	PUSH	DE
	CALL	_ROPEN
	POP	DE
	RET	C
;
	LD	A,(IX+1+$0C)
	CP	$A0
	JP	Z,OLDTYPE
;
	CALL	CHECK
	JP	NZ,USAGE
	CALL	_HLHEX
	JP	C,USAGE
	LD	(DTADR),HL
	CALL	CHECK
	JP	NZ,USAGE
	CALL	_HLHEX
	JP	C,USAGE
	LD	(EXADR),HL
;
	CALL	WTCHK
	RET	C
;
	LD	A,(IX+1+$10)	;LA Bin Check
	CP	$A0
	SCF
	RET	Z
;
	LD	BC,$08A0
	LD	A,$20
	CALL	WRTA
;
	LD	HL,(_IBFAD)
	LD	DE,1+$0C
	ADD	HL,DE
	EX	DE,HL
;
	LD	HL,(DTADR)
	CALL	_HEXHL
;
	LD	A,$A0
	LD	(DE),A
	INC	DE
;
	LD	HL,(EXADR)
	CALL	_HEXHL
;
WRITE:
	XOR	A
	LD	(DE),A
;
WRITE2:
	CALL	_WTDIRX
	CALL	_MOTOFF
	RET	C
;
OK:
	CALL	_MPRNT
	DB	"Ok",$0D,0
	AND	A
	RET
;
OLDTYPE:
	CALL	WTCHK
	RET	C
	LD	HL,(_IBFAD)
	LD	DE,1+$0D
	ADD	HL,DE
	LD	E,L
	LD	D,H
	DEC	DE
	LD	BC,9
	LDIR
	LD	HL,(_IBFAD)
	LD	DE,1+$15
	ADD	HL,DE
	EX	DE,HL
	JR	WRITE
;
CHECK:
	LD	A,(DE)
	INC	DE
	CP	":"
	RET	Z
	CP	","
	RET	Z
	CP	$20
	RET
;
WTCHK:
	LD	A,(IX+1+$0B)
	AND	$1F
	RET	Z
	SCF
	RET
;
WRTA:
	LD	HL,(_IBFAD)
	INC	HL
WRTA1:
	CP	(HL)
	JR	NZ,WRTA2
	LD	(HL),C
WRTA2:
	INC	HL
	DJNZ	WRTA1
;
	RET
;
MSXLA:
	LD	(DEBUF),DE
	LD	A,1
	CALL	_FILE
	RET	C
	CALL	_ROPEN
	RET	C
	LD	DE,MESML
	CALL	_MSG
	CALL	_LTNL
;
MSXLA1:
	CALL	FPRNT
	LD	HL,WORK
	LD	(_DTADR),HL
	CALL	_RDD
	JP	C,MLERR
;
	LD	A,(WORK)
	CP	$FE
	JR	Z,MSXBIN
	LD	HL,WORK
	CALL	IS_SOS_OBJ
	JP	NZ,MLERR
	LD	DE,WORK+8
	CALL	_HLHEX
	JP	C,MLERR
	LD	(_DTADR),HL
	LD	HL,(_SIZE)
	LD	DE,18
	SBC	HL,DE
	LD	(_SIZE),HL

	LD	DE,WORK+$0D
	CALL	_HLHEX
	JP	C,MLERR
	LD	(_EXADR),HL

	CALL	WOPEN
	RET	C

	LD	HL,WORK+18
	JR	OBJSOS1
MSXBIN:
	LD	HL,(WORK+1)
	LD	(_DTADR),HL
	EX	DE,HL
	LD	HL,(WORK+3)
	AND	A
	SBC	HL,DE
	INC	HL
	LD	DE,(_SIZE)
	DEC	DE	;1
	DEC	DE	;2
	DEC	DE	;3
	DEC	DE	;4
	DEC	DE	;5
	DEC	DE	;6
	DEC	DE	;7
	LD	(_SIZE),HL
	AND	A
	SBC	HL,DE
	JP	NZ,MLERR
;
	LD	HL,(WORK+5)
	LD	(_EXADR),HL
;
	CALL	WOPEN
	RET	C
;
	LD	HL,WORK+7
OBJSOS1:
	LD	(_DTADR),HL
	CALL	_WRD
	RET	C
	CALL	OK
	CALL	_PAUSE
	DW	BREAK
MLNEXT:
	LD	DE,(DEBUF)
	LD	A,1
	CALL	_FILE
	RET	C
	CALL	_NROPEN
	JP	NC,MSXLA1
BREAK:
	AND	A
	RET
;
LAMSX:
	LD	(DEBUF),DE
	XOR	A
	CALL	_FILE
	RET	C
	CALL	_ROPEN
	RET	C
	LD	DE,MESLM
	CALL	_MSG
	CALL	_LTNL
;
LAMSX1:
	CALL	FPRNT
	LD	A,(IX+1+$10)	;LA Bin Check
	CP	$A0
	JP	NZ,OBJ2MSX
;
	LD	BC,$0820
	LD	A,$A0
	CALL	WRTA
;
	LD	HL,(_DTADR)
	LD	(WORK+1),HL
	LD	DE,(_SIZE)
	DEC	DE
	ADD	HL,DE
	LD	(WORK+3),HL
	LD	HL,(_EXADR)
	LD	(WORK+5),HL
;
	LD	HL,WORK+7
	LD	(_DTADR),HL
	CALL	_RDD
	JP	C,LAERR
	LD	HL,(_SIZE)
	LD	DE,7
	ADD	HL,DE
	RET	C
	LD	(_SIZE),HL

	LD	HL,(_IBFAD)
	LD	DE,$0C
	ADD	HL,DE
	LD	B,10
	XOR	A
CLEAR:
	INC	HL
	LD	(HL),A
	DJNZ	CLEAR
OBJMSX1:
	LD	A,$FE
	LD	HL,WORK
	LD	(HL),A
	LD	(_DTADR),HL

	CALL	WOPEN
	RET	C
	CALL	_WRD
	RET	C
	CALL	OK
	CALL	_PAUSE
	DW	BREAK
LMNEXT:
	LD	DE,(DEBUF)
	XOR	A
	CALL	_FILE
	RET	C
	CALL	_NROPEN
	JP	NC,LAMSX1
	AND	A
	RET
OBJ2MSX:
	LD	HL,SOS_HEADER
	LD	(_DTADR),HL
	CALL	_RDD
	JP	C,LAERR
	LD	HL,SOS_HEADER
	CALL	IS_SOS_OBJ
	JP	NZ,LAERR
	LD	HL,(_SIZE)
	LD	DE,7-12
	ADD	HL,DE
	LD	(_SIZE),HL

	LD	DE,SOS_HEADER+$0D	;Exec
	CALL	_HLHEX
	PUSH	HL
	LD	DE,SOS_HEADER+8	;Start
	CALL	_HLHEX
	LD	(WORK+1),HL		;Start
	LD	DE,(_SIZE)
	ADD	HL,DE
	DEC	HL
	LD	(WORK+3),HL		;End
	POP	HL
	LD	(WORK+5),HL		;Exec

	JR	OBJMSX1
FPRNT:
	LD	A,(_WILD)
	OR	A
	LD	A,$00
	LD	(_WILD),A
	RET	Z
	CALL	_FPRNT
	JP	_PRNTS
;
NORMAL:
	CALL	_FILE
	RET	C
	LD	A,(_WILD)
	OR	A
	SCF
	RET	NZ
	CALL	_ROPEN
	RET	C
	LD	DE,MESLN
COM1:
	CALL	_MSG
	CALL	_LTNL
;
	LD	A,(IX+1+$10)	;LA Bin Check
	CP	$A0
	JP	NZ,LAERR
;
	LD	BC,$0820
	LD	A,$A0
	CALL	WRTA
;
	LD	HL,(_IBFAD)
	LD	DE,$0C+1
	ADD	HL,DE
	LD	BC,$0A00
NOR1:
	LD	(HL),C
	INC	HL
	DJNZ	NOR1
;
	JP	WRITE2
;
COM:
	LD	IX,(_IBFAD)
	LD	(DEBUF),DE
	CALL	_FILE
	RET	C
	LD	A,(_WILD)
	OR	A
	SCF
	RET	NZ
	CALL	_ROPEN
	RET	C
	CALL	CHKCOM
	JR	Z,COM2
	CALL	SETCOM
	CALL	_KILL
	LD	DE,(DEBUF)
	CALL	_FILE
	RET	C
	CALL	_ROPEN
	RET	C
	CALL	SETCOM
COM2:
	LD	DE,MESLC
	JP	COM1
;
SETCOM:
	LD	(IX+1+8),"C"
	LD	(IX+1+9),"O"
	LD	(IX+1+10),"M"
	RET
;
CHKCOM:
	LD	A,(IX+1+8)
	CALL	_CAP
	CP	"C"
	RET	NZ
	LD	A,(IX+1+9)
	CALL	_CAP
	CP	"O"
	RET	NZ
	LD	A,(IX+1+10)
	CALL	_CAP
	CP	"M"
	RET
;
WOPEN:				;タイムスタンプ保存
	LD	L,(IX+1+$16)
	LD	H,(IX+1+$17)
	PUSH	HL
	LD	L,(IX+1+$18)
	LD	H,(IX+1+$19)
	PUSH	HL
	CALL	_WOPEN
	POP	HL
	LD	(IX+1+$18),L
	LD	(IX+1+$19),H
	POP	HL
	LD	(IX+1+$16),L
	LD	(IX+1+$17),H
	RET

IS_SOS_OBJ:
	LD	A,(HL)
	CP	'_'
	RET	NZ
	INC	HL
	LD	A,(HL)
	CP	'S'
	RET	NZ
	INC	HL
	LD	A,(HL)
	CP	'O'
	RET	NZ
	INC	HL
	LD	A,(HL)
	CP	'S'
	RET

USAGE:	CALL	_MPRNT
	DB	$1A,"binary converter v1.11 Lovers",$0D
	DB	"usage:",$0D
	DB	" BIN [ｽｲｯﾁ] ﾌｧｲﾙﾈｰﾑ[ ｶｲｼｱﾄﾞﾚｽ ｼﾞｯｺｳｱﾄﾞﾚｽ]",$0D
	DB	$0D
	DB	9,"/C "
MESLC:	DB	"LA to COM",$0D
	DB	9,"/L "
MESML:	DB	"to LA",$0D
	DB	9,"/M "
MESLM:	DB	"to MSX",$0D
;	DB	9,"/O "
;MESLO:	DB	"to OBJ",$0D
	DB	9,"/N "
MESLN:	DB	"LA to normal",$0D
	DB	0
	AND	A
	RET
;
MLERR:	CALL	_MPRNT
	DB	"Skip",$0D,0
	JP	MLNEXT
;
LAERR:	CALL	_MPRNT
	DB	"Skip",$0D,0
	JP	LMNEXT
;
DTADR:	DW	0
EXADR:	DW	0
DEBUF:	DW	0
SOS_HEADER:
	DS	18-7
WORK:
PGMEND: