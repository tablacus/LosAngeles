;
;	BWORK by Larn M.R.
;
	$INCLUDE	LA.DEF
;
DEID	EQU	$0B	;bank ram disk
SIZE	EQU	48
;
	ORG	$3000
;
	CALL	#MPRNT
	DB	$1A,"X1turbo bwork v1.00 Lovers"
	DB	$0D,0
;
	CALL	#SPSK
	LD	A,(DE)
	CP	"/"
	JR	Z,SW2
	CP	"-"
	JR	Z,SW2
	JP	TSR
;
SW2:	INC	DE
	LD	A,(DE)
	CALL	#CAP
	CP	"R"
	JP	Z,REMOVE
	CP	"I"
	JR	NZ,SW3
	LD	(FORMAT),A
	JR	TSR
SW3:
	CP	"Z"
	JP	NZ,USAGE
;
TSR:
	CALL	PRO
	JR	NC,TSR1
	LD	A,(FORMAT)
	OR	A
	JP	NZ,INIT
	SCF
	RET
TSR1:
	CALL	#VER
	LD	A,H
	AND	$F0
	CP	$20
	SCF
	CCF
	RET	NZ
;
	CALL	DISK
	JR	NC,DISK3
	CALL	#MPRNT
	DB	"brad ¶ ª∑ ∆ ºﬁÆ≥¡≠≥ º√»!",7,$0D,0
	RET
;
DISK3:
	LD	A,C
	CALL	#CHGDRV
	CALL	#RDFAT
	JR	NC,DISK4
	CALL	#MPRNT
	DB	"brad … ºﬁ≠›Àﬁ∂ﬁ √ﬁ∑√ ≤≈≤‹!",7,$0D,0
	RET
DISK4:
	LD	L,(IY+$08)	;MAXCL
	LD	H,(IY+$09)
	LD	DE,SIZE+2
	SBC	HL,DE
	JR	C,NOTFREE
	LD	(MAXCL+1),HL
;
	LD	B,SIZE
	EX	DE,HL
FREE1:
	PUSH	BC
	PUSH	DE
	CALL	#GNCL
	LD	A,D
	OR	E
	JR	Z,FREE2
	POP	DE
	POP	BC
NOTFREE:
	CALL	#MPRNT
	DB	"brad … ÷≥ÿÆ≥ ∂ﬁ ¿ÿ≈≤‹!",7,$0D,0
	RET
FREE2:
	POP	DE
	POP	BC
	INC	DE
	DJNZ	FREE1
;
MAXCL:	LD	HL,0
	INC	HL
	INC	HL
	LD	(IY+$08),L
	LD	(IY+$09),H
;
	LD	E,(IY+$06)
	LD	D,0
	ADD	HL,DE
	INC	HL
	INC	HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,L
	LD	(LOW+1),A
	LD	A,H
	LD	(HIGH+1),A
;
	LD	HL,(#POKE+1)
	LD	(POKE),HL
	LD	HL,(#PEEK+1)
	LD	(PEEK),HL
	LD	HL,(#POKE@+1)
	LD	(POKE@),HL
	LD	HL,(#PEEK@+1)
	LD	(PEEK@),HL
	LD	HL,(#WKSIZ)
	LD	(WKSIZ),HL
;
	LD	HL,(#MEMAX)
	LD	(START+6),HL
	LD	BC,LAST-START
	AND	A
	SBC	HL,BC
	LD	(#MEMAX),HL
;
	EX	DE,HL
;
	LD	HL,_POKE-START
	ADD	HL,DE
	LD	(#POKE+1),HL
;
	LD	HL,_PEEK-START
	ADD	HL,DE
	LD	(#PEEK+1),HL
;
	LD	HL,_POKE@-START
	ADD	HL,DE
	LD	(#POKE@+1),HL
;
	LD	HL,_PEEK@-START
	ADD	HL,DE
	LD	(#PEEK@+1),HL
;
	LD	HL,ADR-START
	ADD	HL,DE
	LD	(\ADR1+1),HL
	LD	(\ADR2+1),HL
;
	LD	HL,SPPAT+1-START
	ADD	HL,DE
	LD	(\SPPAT1+2),HL
	LD	(\SPPAT2+2),HL
;
	LD	HL,START
	LD	BC,LAST-START
	LDIR
;
	LD	HL,SIZE*1024
	LD	(#WKSIZ),HL
;
	CALL	MESSAGE
;
INIT:
	LD	A,(FORMAT)
	OR	A
	RET	Z
	CALL	#MPRNT
	DB	"initlialize",$0D,0
	LD	HL,(#WKSIZ)
CLEAR:
	DEC	HL
	XOR	A
	CALL	#POKE
	LD	A,H
	OR	L
	JR	NZ,CLEAR
	RET
;
MESSAGE:
	CALL	#MPRNT
	DB	"MEMAX:",0
	LD	HL,(#MEMAX)
	CALL	#PRTHL
	CALL	#LTNL
	CALL	#MPRNT
	DB	"WKSIZ:",0
	LD	HL,(#WKSIZ)
	CALL	#PRTHL
	XOR	A
	JP	#LTNL
;
REMOVE:	LD	HL,(#MEMAX)
	LD	DE,(#MEMAX1)
	PUSH	HL
	AND	A
	SBC	HL,DE
	POP	HL
	JR	Z,REME
;
	LD	DE,START
	LD	B,6
	CALL	CPSTR
	JR	Z,REM2
REME:	CALL	#MPRNT
	DB	"∂≤ºﬁÆ√ﬁ∑≈≤‹!",7,$0D,0
	AND	A
	RET
;
REM2:
	LD	(REMHL+1),HL
	CALL	DISK
	JR	C,REME
;
	LD	L,(IY+$08)
	LD	H,(IY+$09)
	LD	DE,SIZE
	ADD	HL,DE
	LD	(IY+$08),L
	LD	(IY+$09),H
;
	CALL	#MPRNT
	DB	'realese',$0D,0
REMHL:	LD	HL,0
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(#MEMAX),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(#POKE+1),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(#PEEK+1),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(#POKE@+1),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	INC	HL
	LD	(#PEEK@+1),DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	(#WKSIZ),DE
	JP	MESSAGE
;
PRO:	LD	HL,(#MEMAX)
PRO1:	LD	DE,(#MEMAX1)
	AND	A
	EX	DE,HL
	SBC	HL,DE
	EX	DE,HL
	RET	Z
;
	LD	A,(HL)
	CP	'['
	SCF
	CCF
	RET	NZ
	LD	DE,START+1
	INC	HL
	LD	B,(HL)
	INC	HL
	LD	A,$1F
	CP	B
	JR	NC,PRO2
	DEC	HL
	LD	B,5
PRO2:
	PUSH	BC
	PUSH	HL
	CALL	CPSTR
	POP	HL
	POP	BC
	SCF
	RET	Z
	LD	C,B
	LD	B,0
	ADD	HL,BC
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	JR	PRO1
;
CPSTR:	LD	A,(DE)
	CP	(HL)
	RET	NZ
	INC	DE
	INC	HL
	DJNZ	CPSTR
	RET
;
DISK:
	LD	C,"A"
	LD	A,(#MAXDRV)
	LD	B,A
DISK1:
	LD	A,C
	CALL	#DEVADX
	JR	C,DISK2
	LD	A,(IY+$12)	;DEVNO
	CP	DEID
	JR	NZ,DISK2
	LD	A,(IY+$13)	;UNITNO
	OR	A
	JR	NZ,DISK2
	LD	A,(IY+$07)	;DBLCL
	OR	A
	RET	Z
DISK2:
	INC	C
	DJNZ	DISK1
	SCF
	RET
;
USAGE:	CALL	#MPRNT
	DB	"usage:",$0D
	DB	" BWORK    ºﬁÆ≥¡≠≥",$0D
	DB	" BWORK /I ‹∞∏ºÆ∑∂",$0D
	DB	" BWORK /R  ∂≤ºﬁÆ",$0D
	DB	0
	XOR	A
	RET
;
FORMAT:	DB	0
;
;		 012345	 6 7
START:	DB	"[BWORK",0,0
;
POKE:	DW	0
PEEK:	DW	0
POKE@:	DW	0
PEEK@:	DW	0
WKSIZ:	DW	0
;
_POKE:
	DI
	PUSH	BC
	PUSH	HL
\SPPAT1:LD	(SPPAT+1),SP
	LD	SP,$FF60
\ADR1:	CALL	ADR
	LD	(HL),A
	JR	POKE1
;
_PEEK:
	DI
	PUSH	BC
	PUSH	HL
\SPPAT2:LD	(SPPAT+1),SP
	LD	SP,$FF60
\ADR2:	CALL	ADR
	LD	A,(HL)
POKE1:
	LD	L,$10
	OUT	(C),L		;main
SPPAT:	LD	SP,0
	POP	HL
	POP	BC
	AND	A
	EI
	RET
;
ADR:
	PUSH	AF
	LD	BC,$0B00
	LD	A,H
LOW:	ADD	A,$00
	LD	H,A
	LD	A,C		;C=0
HIGH:	ADC	A,$00
	RLC	H
	ADC	A,A
	SRL	H
	OUT	(C),A
	POP	AF
	RET
;
_POKE@:
	EX	DE,HL
_POKE@1:
	LD	A,(DE)
	INC	DE
	CALL	#POKE
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,_POKE@1
	RET
;
_PEEK@:
	EX	DE,HL
_PEEK@1:
	CALL	#PEEK
	INC	HL
	LD	(DE),A
	INC	DE
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,_PEEK@1
	RET
;
LAST:
