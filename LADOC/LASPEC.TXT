
        LA各部の仕様

★ファイル名について

　LAでは8文字ファイル名と3文字の拡張子を付けられます。
X68kとの差分のファイル名10文字はLAバイナリ形式の時に用います。

具体的にLAバイナリ形式は 

開始番地+LAバイナリ形式のID($A0)+実行番地+$00

になっています。この開始番地と実行番地は4バイトのASCII形式で格納されており
X68kでDIRしても見る事ができます。

FORMAT　　.BIN:3000:33EE:3000のディレクトリエントリ
			  開始番地　最終番地　実行番地

46 4F 52 4D 41 54 A0 A0 42 49 4E 20 33 30 30 30
 F  O  R  M  A  T	 B  I  N ↑  3  0  0  0
<   ファイルネーム 　 >  <拡張子>↑  <開始番地>
				<属性>

A0 33 30 30 30 00 A3 B1 EC 1C 90 00 EF 03 00 00
↑  3  0  0  0     <タイムスタンプ> <クラスタ> < サイズ >
↑　<実行番地>
<バイナリ形式>


        X68kでDIRした場合

FORMAT　　3000　3000.BIN      1007
<ファイルネーム>開始番地　実行番地　拡張子      ファイルサイズ(10進数)


　LAバイナリ形式ではファイル名が8文字以下のファイルをX68kでコピーしても開
始番地と実行番地が失われないようにファイル名のスペース($20)が($A0)に置
き換えられます。(拡張子の部分は置き換えられない)

　MS-DOSマシンでLAバイナリ形式のファイルをコピーするとアドレス情報が失わ
れますのでMSXバイナリ形式に変換してからコピーします。

　それからHuman68kのコマンドラインで8文字以下のLAバイナリ形式のファイ
ルを扱う場合はスペースの部分にワイルドカードを用いて下さい。
($A0のキャラはX1やX68kでは半角カナモードでシフトを押しながら【ろ】のキ
ーを押すと出てきます。)

例)LA.SYSをコピーする場合。

	A>COPY　LA*.SYS　B:

	X68kのソフトのSTFでは普通にコピー出来ます。

LAでも普通の形式のファイル(アスキーファイル等)は開始番地や実行番地を持たない
ので($A0)に置き換えられません

-	-	-	-	-	-	-	-	-	-

　MSXバイナリ形式はMSXのBSAVE形式でファイルの先頭にアドレス情報を格納

する方法です。具体的にはファイルの先頭に以下の7バイトのヘッダを付けます。

<オフセット>	<サイズ>	<内容>
  +0		1バイト	MSXバイナリ形式のID($FE)
  +1		2バイト	開始番地
  +3		2バイト	終了番地
  +5		2バイト	実行番地
  +7		不定		実際のファイルの本体

　ということで実際のファイルの内容はファイルの先頭+7バイトから格納しています。

-	-	-	-	-	-	-	-	-	-


　LAでは英小文字のファイルネームと拡張子を付ける事は出来ません。MS-DOSと
の互換の為自動的に大文字に置き換えられます。
　しかし、英小文字のファイルの読み込みは可能です。

それから、LAではシステムで使用するため(半角文字の)以下の文字をファイルネーム
と拡張子に使えません。

	:  .	　￥　*　?
 スペース コロン ピリオド

　Human68k,MS-DOSとの互換の為には必ず以下の文字を用いて下さい

　A~Z　0~9　&　#　(　)　@

　_　^　{　}　!　カナ文字(+カナ記号)

　これら以外の文字を使用するとHuman68kやMS-DOSでアクセス出来なくな
ることがあります。


★ワイルドカード

  ファイル名の指定で使うトランプのジョーカーのみたいなものです。

　同じ拡張子を持ったファイルを表示したり、ある特定の頭文字を持っているファイルだ

けを指定したい場合に便利。ワイルドカードには*と?の2種類あります。

        *...*の部分にはどんな文字が何文字あってもよい

        ?...?の部分はどんな文字でもよい(だだし1文字だけ)


　*は文字列の代わりになるものなので、*が1つあればそこにはどんな文字が何文字あ

ってもいいです。?は1文字分の代わりにしかならないけど1つのファイルの中で複数使

えます。もちろん*と?を組み合わせて使うことも出来ます。


★階層化ディレクトリの取り扱い

[<ドライブ名>:][￥][<ディレクトリ名>￥]…[<ディレクトリ名>￥]<ファイル名>[.<拡張子>]

ファイル名までの[￥][ディレクトリ名￥]…[ディレクトリ名￥]がパス名になります。

ここで、「￥」はパス名を通すためのディレクトリ名およびファイル名を区切るための区
切り記号です。ただし、いちばん最初の「￥」は、ルートディレクトリを表わすシンボル
となります。
「￥」をいちばん最初に書くとルートディレクトリからの絶対指定になります。

また、サブディレクトリを作ると自動的に出来ている「..」は一つ前の親ディレクト
リを示します。

..￥FILENAME

とすると一つ戻ってファイルを指定出来ます。(相対指定)


★カレントディレクトリの移動

Human68kやMS-DOSでは「CD」という命令がありますがLAでは「L」コ
マンドがそれに当たります。

Lコマンドにディレクトリの移動も兼ねさせた理由はS-OSの階層化ディレクトリに対
応していないアプリケーションでもカレントディレクトリの移動ができるからです。
(WINER等のエディタでサブディレクトリをロードするとカレントディレクリトリ
が移動します)

階層化ディレクトリについてはディレクトリの移動コマンドが「L」になっている以外は
Human68kやMS-DOSとほぼ同様だと思われますのでそういう本も参考にして
みて下さい。


★外部コマンドのパス機能

　COPYやTYPEという命令まで外部コマンドのLAですが、パス機能を用いると
　内部コマンドに近い感覚で使えるようになります

　パス機能とは...
　普通外部コマンドはカレントドライブにない場合はエラーになりますが、
　パスを設定しているとパスに設定されたドライブを順に調べてそこにあれば、
　実行するという機能です

　まず、LAのフロッピーでRAMディスクを確保して必要なコマンドを
　RAMディスクに転送しましょう

	GRAD　/F　E:

	COPY　COPY.BIN　E:

　使えればBRADやERADを用いてもいいです。
　次にパスを設定します

	P　@EA

　@はカレントドライブを表します。
　こうするとカレントに外部コマンドがない場合、G-RAMディスク、フロッピー0を
　調べます。だから、フロッピーにCOPYコマンドが入ってなくても
　COPYコマンドが使えます


★LAと外部記憶装置

　LAは1クラスタ1024バイトのブロックデバイス(ディスクのように一度にまと
　まったデータを読み書きでき、ランダムアクセス可能なデバイス)をサポートして
　います

　LAのフロッピーフォーマットは
　2D(9セクタ×512バイト)、2HD(8セクタ×1024バイト)が基本ですが
　2Dは(5セクタ×1024バイト)や(10セクタ×512バイト)もサポート出来
　ます。(400KB)

　2HDは2HS(9セクタ×1024バイト)2HDE(9セクタ×1024バイト)
　もサポートできます。


★LAと大容量デバイス

　LAの基本は1.5バイトFATですが、HumanもしくはMS-DOS形式の
　2バイトFATをサポートできます。

　LAの1クラスタは1024バイトですので、

　　　65536(2バイト)×1024バイト=64Mバイト

　1ドライブで約64Mバイトまでサポートできます。

　この場合、1024バイト単位の入出力ルーチンとFAT(読み書き)処理ルーチンが
　必要です。

　また、1つのデバイスを1Mバイトずつに分割(1つのデバイスドライバで256に
　分割出来ます)すると、FAT処理ルーチンにLAの標準ルーチンを使用出来ますので
　デバイスドライバの処理ルーチンが楽に作れます

　　　1Mバイト×256=256Mバイト

　LAのフロッピーやRAMディスクは基本的にMS-DOS互換フォーマットなので
　BASICのフロッピーやRAMディスクとは互換性がありません


★特殊ワークエリア

　特殊ワークエリアとはメインメモリ以外のメモリを有効に多くの機種で同様に扱う為にOSで用

意されたサブルーチン(#POKE,#POKE@,#PEEK,#PEEK@)でアクセスされるワークエリアです。

　X1ではG-RAMのバンク0を割り当てています。

